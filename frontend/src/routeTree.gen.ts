/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VideoImport } from './routes/video'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as UserIndexImport } from './routes/user/index'
import { Route as PlaylistIndexImport } from './routes/playlist/index'
import { Route as AuthenticatedProfilePlaylistPlaylistIDImport } from './routes/_authenticated/profile/playlist.$playlistID'

// Create Virtual Routes

const RegisterLazyImport = createFileRoute('/register')()
const LoginLazyImport = createFileRoute('/login')()
const AuthenticatedUploadLazyImport = createFileRoute(
  '/_authenticated/upload',
)()
const AuthenticatedProfileIndexLazyImport = createFileRoute(
  '/_authenticated/profile/',
)()
const AuthenticatedDashboardIndexLazyImport = createFileRoute(
  '/_authenticated/dashboard/',
)()
const AuthenticatedDashboardVideosIndexLazyImport = createFileRoute(
  '/_authenticated/dashboard/videos/',
)()
const AuthenticatedDashboardProfileIndexLazyImport = createFileRoute(
  '/_authenticated/dashboard/profile/',
)()

// Create/Update Routes

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const VideoRoute = VideoImport.update({
  path: '/video',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserIndexRoute = UserIndexImport.update({
  path: '/user/',
  getParentRoute: () => rootRoute,
} as any)

const PlaylistIndexRoute = PlaylistIndexImport.update({
  path: '/playlist/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUploadLazyRoute = AuthenticatedUploadLazyImport.update({
  path: '/upload',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/upload.lazy').then((d) => d.Route),
)

const AuthenticatedProfileIndexLazyRoute =
  AuthenticatedProfileIndexLazyImport.update({
    path: '/profile/',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/profile/index.lazy').then((d) => d.Route),
  )

const AuthenticatedDashboardIndexLazyRoute =
  AuthenticatedDashboardIndexLazyImport.update({
    path: '/dashboard/',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/dashboard/index.lazy').then((d) => d.Route),
  )

const AuthenticatedDashboardVideosIndexLazyRoute =
  AuthenticatedDashboardVideosIndexLazyImport.update({
    path: '/dashboard/videos/',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/dashboard/videos/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedDashboardProfileIndexLazyRoute =
  AuthenticatedDashboardProfileIndexLazyImport.update({
    path: '/dashboard/profile/',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/dashboard/profile/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedProfilePlaylistPlaylistIDRoute =
  AuthenticatedProfilePlaylistPlaylistIDImport.update({
    path: '/profile/playlist/$playlistID',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/video': {
      preLoaderRoute: typeof VideoImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/upload': {
      preLoaderRoute: typeof AuthenticatedUploadLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/playlist/': {
      preLoaderRoute: typeof PlaylistIndexImport
      parentRoute: typeof rootRoute
    }
    '/user/': {
      preLoaderRoute: typeof UserIndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/dashboard/': {
      preLoaderRoute: typeof AuthenticatedDashboardIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/profile/': {
      preLoaderRoute: typeof AuthenticatedProfileIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/profile/playlist/$playlistID': {
      preLoaderRoute: typeof AuthenticatedProfilePlaylistPlaylistIDImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard/profile/': {
      preLoaderRoute: typeof AuthenticatedDashboardProfileIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard/videos/': {
      preLoaderRoute: typeof AuthenticatedDashboardVideosIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthenticatedRoute.addChildren([
    AuthenticatedUploadLazyRoute,
    AuthenticatedDashboardIndexLazyRoute,
    AuthenticatedProfileIndexLazyRoute,
    AuthenticatedProfilePlaylistPlaylistIDRoute,
    AuthenticatedDashboardProfileIndexLazyRoute,
    AuthenticatedDashboardVideosIndexLazyRoute,
  ]),
  VideoRoute,
  LoginLazyRoute,
  RegisterLazyRoute,
  PlaylistIndexRoute,
  UserIndexRoute,
])

/* prettier-ignore-end */
